name: Nettoyage des ressources AWS

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Tapez "SUPPRIMER" pour confirmer la suppression des ressources'
        required: true
        type: string
      region:
        description: 'Région AWS à nettoyer'
        required: true
        default: 'ca-central-1'
        type: string
      cleanup_mode:
        description: 'Mode de nettoyage'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - selective
      cleanup_compute:
        description: 'Supprimer les ressources de calcul (EC2, EKS)'
        required: false
        default: true
        type: boolean
      cleanup_network:
        description: 'Supprimer les ressources réseau (VPC, SG, EIP)'
        required: false
        default: true
        type: boolean
      cleanup_storage:
        description: 'Supprimer les ressources de stockage (S3, RDS)'
        required: false
        default: true
        type: boolean
      cleanup_other:
        description: 'Supprimer les autres ressources (CloudWatch, DynamoDB)'
        required: false
        default: true
        type: boolean

jobs:
  cleanup:
    if: ${{ github.event.inputs.confirm == 'SUPPRIMER' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Decode AWS credentials
        run: |
          echo "${{ secrets.AWS_CREDENTIALS_BASE64 }}" | base64 -d > aws-credentials.json
          echo "AWS_ACCESS_KEY_ID=$(jq -r .aws_access_key_id aws-credentials.json)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(jq -r .aws_secret_access_key aws-credentials.json)" >> $GITHUB_ENV
          rm aws-credentials.json
      
      - name: Configure AWS CLI
        run: |
          aws configure set region ${{ github.event.inputs.region }}
          aws configure set output json
      
      - name: Run cleanup script
        run: |
          chmod +x ./infra/scripts/cleanup.sh
          
          # Définir les options de nettoyage
          OPTIONS=""
          if [ "${{ github.event.inputs.cleanup_mode }}" = "selective" ]; then
            if [ "${{ github.event.inputs.cleanup_compute }}" = "true" ]; then OPTIONS="$OPTIONS --compute"; fi
            if [ "${{ github.event.inputs.cleanup_network }}" = "true" ]; then OPTIONS="$OPTIONS --network"; fi
            if [ "${{ github.event.inputs.cleanup_storage }}" = "true" ]; then OPTIONS="$OPTIONS --storage"; fi
            if [ "${{ github.event.inputs.cleanup_other }}" = "true" ]; then OPTIONS="$OPTIONS --other"; fi
          fi
          
          # Exécuter le script avec les options
          ./infra/scripts/cleanup.sh ${{ github.event.inputs.region }} $OPTIONS