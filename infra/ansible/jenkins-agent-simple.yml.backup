---
- name: Configuration de l'agent Jenkins
  hosts: jenkins_agents
  become: true
  vars:
    jenkins_agent_user: jenkins
    jenkins_agent_home: /home/jenkins
    node_version: "18.19.0"
  
  tasks:
    # Fix Docker APT conflicts
    - name: Fix Docker APT
      script: ../../scripts/fix_docker_apt.sh

    # Base setup
    - name: Install base packages
      apt:
        name:
          - openjdk-17-jdk
          - curl
          - wget
          - git
          - unzip
        update_cache: yes

    - name: Set timezone
      timezone:
        name: Europe/Paris

    # Node.js
    - name: Create Node.js directory
      file:
        path: /opt/nodejs
        state: directory
        mode: '0755'

    - name: Download Node.js
      get_url:
        url: "https://nodejs.org/dist/v{{ node_version }}/node-v{{ node_version }}-linux-x64.tar.xz"
        dest: "/tmp/node-v{{ node_version }}-linux-x64.tar.xz"

    - name: Extract Node.js
      unarchive:
        src: "/tmp/node-v{{ node_version }}-linux-x64.tar.xz"
        dest: /opt/nodejs
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: /opt/nodejs/bin/node

    - name: Create Node.js symlinks
      file:
        src: "/opt/nodejs/bin/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        state: link
      loop:
        - node
        - npm
        - npx

    # Jenkins user
    - name: Create jenkins user
      user:
        name: "{{ jenkins_agent_user }}"
        home: "{{ jenkins_agent_home }}"
        shell: /bin/bash
        state: present

    - name: Create agent directory
      file:
        path: "{{ jenkins_agent_home }}/agent"
        state: directory
        owner: "{{ jenkins_agent_user }}"
        group: "{{ jenkins_agent_user }}"
        mode: '0755'

    # Jenkins agent
    - name: Get agent secret
      uri:
        url: "http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/computer/{{ inventory_hostname }}/slave-agent.jnlp"
        return_content: yes
      register: agent_jnlp

    - name: Extract secret
      set_fact:
        jenkins_agent_secret: "{{ agent_jnlp.content | regex_search('<argument>([a-f0-9]+)</argument>') | regex_replace('</?argument>', '') }}"

    - name: Download agent.jar
      get_url:
        url: "http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_home }}/agent/agent.jar"
        owner: "{{ jenkins_agent_user }}"
        group: "{{ jenkins_agent_user }}"

    - name: Create start script
      template:
        content: |
          #!/bin/bash
          cd {{ jenkins_agent_home }}/agent
          java -jar agent.jar -jnlpUrl http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/computer/{{ inventory_hostname }}/slave-agent.jnlp -secret {{ jenkins_agent_secret }} -workDir {{ jenkins_agent_home }}
        dest: "{{ jenkins_agent_home }}/start-agent.sh"
        owner: "{{ jenkins_agent_user }}"
        group: "{{ jenkins_agent_user }}"
        mode: '0755'

    - name: Create systemd service
      template:
        content: |
          [Unit]
          Description=Jenkins Agent
          After=network.target

          [Service]
          Type=simple
          User={{ jenkins_agent_user }}
          ExecStart={{ jenkins_agent_home }}/start-agent.sh
          Restart=always

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/jenkins-agent.service

    - name: Start Jenkins agent
      systemd:
        name: jenkins-agent
        enabled: yes
        state: started
        daemon_reload: yes

    # Docker
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: yes

    - name: Add jenkins to docker group
      user:
        name: "{{ jenkins_agent_user }}"
        groups: docker
        append: yes

    - name: Start Docker
      systemd:
        name: docker
        enabled: yes
        state: started
