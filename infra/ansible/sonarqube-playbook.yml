---
- name: Configuration de SonarQube
  hosts: sonarqube
  become: true
  vars:
    sonarqube_admin_password: "{{ lookup('env', 'SONARQUBE_ADMIN_PASSWORD') }}"
    sonarqube_admin_username: "{{ lookup('env', 'SONARQUBE_ADMIN_USERNAME') }}"
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Activer NTP avec timedatectl
      become: yes
      ansible.builtin.command: timedatectl set-ntp true
      changed_when: false

    - name: Configurer la timezone sur Europe/Paris
      timezone:
        name: Europe/Paris

    - name: Install Docker and dependencies
      apt:
        name: 
          - docker.io
          - docker-compose
          - docker-buildx
          - python3-pip
          - python3-setuptools
          - python3-venv
          - pipx
          - jq
          - curl
          - wget
          - git
          - ca-certificates
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Copy docker-compose file
      copy:
        src: "../files/sq-docker-compose.yml"
        dest: /home/ubuntu/docker-compose.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Start SonarQube with docker-compose
      shell: docker-compose -f /home/ubuntu/docker-compose.yml up -d
      args:
        chdir: /home/ubuntu
      become_user: ubuntu

    - name: Wait for SonarQube to be ready
      uri:
        url: "http://localhost:9000/api/system/status"
        method: GET
      register: sonar_status
      until: sonar_status.status == 200
      retries: 30
      delay: 10
      
    - name: Afficher l'URL de SonarQube
      debug:
        msg: 
          - "SonarQube a été installé avec succès et est accessible à l'adresse:"
          - "http://{{ inventory_hostname }}:9000"
          - "Identifiants par défaut: admin/admin"
          - "IMPORTANT: Veuillez configurer manuellement l'intégration avec Jenkins en suivant les instructions dans la documentation."

    - name: Créer un script de vérification des services
      copy:
        dest: /home/ubuntu/check-services.sh
        owner: ubuntu
        group: ubuntu
        mode: '0755'
        content: |
          #!/bin/bash
          echo "=== Status des services ==="
          echo "Docker: $(systemctl is-active docker)"
          echo "SonarQube containers:"
          docker ps --filter "name=sonar" --format "table {% raw %}{{.Names}}\t{{.Status}}\t{{.Ports}}{% endraw %}"
          echo ""
          echo "=== Vérification SonarQube ==="
          curl -s http://localhost:9000/api/system/status
          echo ""
          echo "=== Logs récents SonarQube ==="
          docker logs --tail 20 sonarqube 2>/dev/null || echo "Container SonarQube non trouvé"
          echo ""
          echo "=== Test de connectivité ==="
          if curl -s -o /dev/null -w "%{http_code}" http://localhost:9000 | grep -q "200"; then
            echo "✅ SonarQube est accessible"
          else
            echo "❌ SonarQube n'est pas accessible"
          fi
          echo ""
          echo "=== Informations système ==="
          echo "Espace disque: $(df -h / | tail -1 | awk '{print $5}')"
          echo "Mémoire disponible: $(free -h | grep Mem | awk '{print $7}')"