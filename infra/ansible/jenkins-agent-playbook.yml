---
- name: Configuration Jenkins Agent
  hosts: jenkins_agents
  become: true
  vars:
    jenkins_agent_user: jenkins
    jenkins_agent_home: /home/jenkins
  
  tasks:
    # Fix Docker APT (cohérent avec master)
    - name: Fix Docker APT
      script: ../../scripts/fix_docker_apt.sh

    # Installation base
    - name: Install base packages
      apt:
        name:
          - openjdk-17-jdk
          - curl
          - wget
          - git
          - unzip
        update_cache: yes

    - name: Set timezone
      timezone:
        name: Europe/Paris

    # Node.js (même méthode que master)
    - name: Setup Node.js
      block:
        - name: Create Node.js directory
          file:
            path: /opt/nodejs
            state: directory

        - name: Download and extract Node.js
          unarchive:
            src: https://nodejs.org/dist/v18.19.0/node-v18.19.0-linux-x64.tar.xz
            dest: /opt/nodejs
            remote_src: yes
            extra_opts: [--strip-components=1]
            creates: /opt/nodejs/bin/node

        - name: Create Node.js symlinks
          file:
            src: "/opt/nodejs/bin/{{ item }}"
            dest: "/usr/local/bin/{{ item }}"
            state: link
          loop: [node, npm, npx]

    # Jenkins user et agent
    - name: Setup Jenkins agent
      block:
        - name: Create jenkins user
          user:
            name: "{{ jenkins_agent_user }}"
            home: "{{ jenkins_agent_home }}"
            shell: /bin/bash

        - name: Create agent directory
          file:
            path: "{{ jenkins_agent_home }}/agent"
            state: directory
            owner: "{{ jenkins_agent_user }}"
            group: "{{ jenkins_agent_user }}"

        - name: Get agent secret
          uri:
            url: "http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/computer/{{ inventory_hostname }}/slave-agent.jnlp"
            return_content: yes
          register: agent_jnlp

        - name: Extract secret
          set_fact:
            jenkins_agent_secret: "{{ agent_jnlp.content | regex_search('<argument>([a-f0-9]+)</argument>') | regex_replace('</?argument>', '') }}"

        - name: Download agent.jar
          get_url:
            url: "http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/jnlpJars/agent.jar"
            dest: "{{ jenkins_agent_home }}/agent/agent.jar"
            owner: "{{ jenkins_agent_user }}"
            group: "{{ jenkins_agent_user }}"

        - name: Create start script
          copy:
            content: |
              #!/bin/bash
              cd {{ jenkins_agent_home }}/agent
              java -jar agent.jar -jnlpUrl http://{{ hostvars[inventory_hostname].jenkins_master_ip }}:8080/computer/{{ inventory_hostname }}/slave-agent.jnlp -secret {{ jenkins_agent_secret }} -workDir {{ jenkins_agent_home }}
            dest: "{{ jenkins_agent_home }}/start-agent.sh"
            owner: "{{ jenkins_agent_user }}"
            group: "{{ jenkins_agent_user }}"
            mode: '0755'

        - name: Create systemd service
          copy:
            content: |
              [Unit]
              Description=Jenkins Agent
              After=network.target

              [Service]
              Type=simple
              User={{ jenkins_agent_user }}
              ExecStart={{ jenkins_agent_home }}/start-agent.sh
              Restart=always

              [Install]
              WantedBy=multi-user.target
            dest: /etc/systemd/system/jenkins-agent.service

    # Docker (même méthode que master)
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: yes

    - name: Setup Docker for Jenkins
      block:
        - name: Start Docker
          systemd:
            name: docker
            enabled: yes
            state: started

        - name: Add jenkins to docker group
          user:
            name: "{{ jenkins_agent_user }}"
            groups: docker
            append: yes

        - name: Start Jenkins agent
          systemd:
            name: jenkins-agent
            enabled: yes
            state: started
            daemon_reload: yes
